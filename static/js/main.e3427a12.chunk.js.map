{"version":3,"sources":["constants.ts","components/todo-input/button/Button.tsx","components/todo-input/input/ToDoInput.tsx","components/loader/Loading.tsx","actions/actionCreator.ts","components/search/SearchBar.tsx","containers/Todo.tsx","components/title/Title.tsx","App.tsx","serviceWorker.js","reducers/tasks.ts","reducers/filters.ts","reducers/tasksub.ts","store.js","reducers/index.ts","index.tsx"],"names":["__webpack_require__","d","__webpack_exports__","ADD_TASK","DELETE_TASK","COMPLETE_TASK","CHANGE_FILTER","ADD_TASK_WITH_DATA","SEARCH_TASK","ADD_TASK_SUB","ADD_TASK_IN_SUBTASK","DELETE_SUBTASK","COMPLETE_SUBTASK","FILTERS_BTN","text","id","Button","_ref","onClick","className","disabled","attrs","Object","C_Users_User_Desktop_react_todo_wmreply_master_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","classes","classNames","react__WEBPACK_IMPORTED_MODULE_1__","assign","e","preventDefault","react__WEBPACK_IMPORTED_MODULE_0__","ToDoInput","value","onChange","type","Loading","react__WEBPACK_IMPORTED_MODULE_5__","react_loader_spinner__WEBPACK_IMPORTED_MODULE_6___default","a","color","height","width","React","addTask","addTaskData","addTaskSub","addTaskInSubTask","deleteSubTask","completeSubTask","searchTask","deleteTask","completeTask","changeFilter","_constants__WEBPACK_IMPORTED_MODULE_0__","isCompleted","typeTask","data","isExpansion","valueSearch","activeFilter","SearchBar","searchText","update","react_default","createElement","target","toLowerCase","LoadableFooter","Loadable","loader","then","bind","loading","timeout","delay","LoadableToDoList","ToDo","state","taskText","taskData","handleInputChange","_this","setState","handleInputDataChange","_ref2","handleCheckBoxChange","length","props","Date","getTime","_this$state","_this$state2","getActiveTasksCounter","tasks","filter","task","filterTasks","config","this","_this$state3","_this$props","filters","isTasksExist","filteredTasks","taskCounter","react","components_search_SearchBar","updateData","checked","amount","tasksList","connect","_ref3","Title","title","App","components_title_Title","containers_Todo","Boolean","window","location","hostname","match","TASKS","load","namespace","arguments","undefined","concat","toConsumableArray","includes","map","TASKSUB","tasksub","preloadedState","rootReducer","combineReducers","composeEnhancers","compose","store","createStore","applyMiddleware","save","ReactDOM","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e3427a12.chunk.js","sourcesContent":["export const ADD_TASK = 'ADD_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\nexport const COMPLETE_TASK = 'COMPLETE_TASK';\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\nexport const ADD_TASK_WITH_DATA = 'ADD_TASK_WITH_DATA';\nexport const SEARCH_TASK = 'SEARCH_TASK';\nexport const ADD_TASK_SUB = 'ADD_TASK_SUB';\nexport const ADD_TASK_IN_SUBTASK = 'ADD_TASK_IN_SUBTASK';\nexport const DELETE_SUBTASK = 'DELETE_SUBTASK';\nexport const COMPLETE_SUBTASK = 'COMPLETE_SUBTASK';\n\nexport const FILTERS_BTN = [\n\t{\n\t\ttext: 'All',\n\t\tid: 'all'\n\t},\n\t{\n\t\ttext: 'Active',\n\t\tid: 'active'\n\t},\n\t{\n\t\ttext: 'Completed',\n\t\tid: 'completed'\n\t}\n];\n\n","import * as React from 'react';\nimport * as classNames from 'classnames';\n\nimport './Button.css';\n\nexport interface ButtonProps {\n    children: string;\n    onClick: (e: any) => void;\n    className: string;\n    disabled: boolean;\n}\n\nconst Button = ({ onClick, className, disabled, ...attrs}: ButtonProps) => {\n\n\tconst onClickAction = e => {\n\t\tif (disabled) {\n\t\t\te.preventDefault();\n\t\t} else {\n\t\t\treturn onClick(e);\n\t\t}\n\t};\n\n\tconst classes = classNames(\n\t\t'button button--pipaluk button--text-thick',\n\t\tclassName\n\t);\n\n\tconst Tag = 'button';\n\n\treturn (\n\t\t<Tag\n\t\t\tclassName={classes}\n\t\t\tdisabled={disabled}\n\t\t\tonClick={onClickAction}\n\t\t\t{...attrs}\n\t\t />\n\t);\n};\n\n\n\nexport default Button;\n","import * as React from 'react';\n\nimport './ToDoInput.css';\n\nexport interface ToDoInputProps {\n    value: string;\n    className: string;\n    type: string;\n    onChange: ({ target: { value } }: { target: { value: any; }; }) => void;\n}\n\nconst ToDoInput = ({ value, onChange, className, type }: ToDoInputProps) => (\n\t<div className=\"todo-input-wrapper\">\n\t\t<span className=\"input input--isao\">\n\t\t\t<input\n\t\t\t\ttype={type}\n\t\t\t\tclassName={className}\n\t\t\t\tonChange={onChange}\n\t\t\t\tvalue={value}\n\t\t\t/>\n\t\t\t<label className=\"input__label input__label--isao\">\n\t\t\t\t<span className=\"input__label-content input__label-content--isao\">Enter text to task</span>\n\t\t\t</label>\n\t\t</span>\n\t</div>\n);\n\nexport default ToDoInput;\n\n","import * as React from 'react';\nimport {LoadingComponentProps } from 'react-loadable';\nimport Loader from 'react-loader-spinner'\n\n\nexport default class Loading extends React.Component<LoadingComponentProps, {}> {\n    render() {\n        return(\n            <Loader\n                type=\"Puff\"\n                color=\"#00BFFF\"\n                height=\"500\"\n                width=\"500\"\n            />\n        );\n    }\n}\n\n\n\n","import {\n    ADD_TASK, DELETE_TASK, COMPLETE_TASK, CHANGE_FILTER,\n    ADD_TASK_WITH_DATA, SEARCH_TASK, ADD_TASK_SUB, ADD_TASK_IN_SUBTASK, DELETE_SUBTASK, COMPLETE_SUBTASK\n} from '../constants';\n\n\n\nexport const addTask = (id, text, isCompleted, typeTask) => ({\n\ttype: ADD_TASK,\n\tid,\n\ttext,\n\tisCompleted,\n    typeTask\n});\n\nexport const addTaskData = (id, text, data, isCompleted, typeTask) => ({\n    type: ADD_TASK_WITH_DATA,\n    id,\n    text,\n    data,\n    isCompleted,\n    typeTask\n});\n\nexport const addTaskSub = (id, text, isCompleted, isExpansion, typeTask) => ({\n    type: ADD_TASK_SUB,\n    id,\n    text,\n    isCompleted,\n    isExpansion,\n    typeTask\n});\n\nexport const addTaskInSubTask = (id, text, isCompleted, typeTask) => ({\n    type: ADD_TASK_IN_SUBTASK,\n    id,\n    text,\n    isCompleted,\n    typeTask\n});\n\nexport const deleteSubTask = id => ({\n    type: DELETE_SUBTASK,\n    id\n});\n\nexport const completeSubTask = id => ({\n    type: COMPLETE_SUBTASK,\n    id\n});\n\nexport const searchTask = (valueSearch) => ({\n    type: SEARCH_TASK,\n    valueSearch\n});\n\nexport const deleteTask = id => ({\n\ttype: DELETE_TASK,\n\tid\n});\n\nexport const completeTask = id => ({\n\ttype: COMPLETE_TASK,\n\tid\n});\n\n\nexport const changeFilter = activeFilter => ({\n\ttype: CHANGE_FILTER,\n\tactiveFilter\n});\n","import React from 'react';\nimport {searchTask} from '../../actions/actionCreator';\n\nimport './SearchBar.css';\n\nexport interface SearchBarProps {\n    searchText: string;\n    searchTask: typeof searchTask;\n    type: string;\n    update: (e: any) => void;\n}\n\nconst SearchBar = ({ searchText , searchTask, type, update}: SearchBarProps) => {\n\n\tconst dataSearch = e => {\n\t\tconst value = e.target.value.toLowerCase();\n\n\t\tsearchTask(value);\n\n\t\tupdate({\n\t\t\tsearchText: value\n\t\t});\n\t};\n\n\treturn(\n\t\t<div className=\"searchbar\">\n\t\t\t<span className=\"input input--isao\">\n\t\t\t<input\n\t\t\t\tvalue={searchText}\n\t\t\t\ttype={type}\n\t\t\t\tclassName=\"input__field__search input__field--isao\"\n\t\t\t\tonChange={dataSearch}\n\t\t\t/>\n\t\t\t\t<label className=\"input__label input__label--isao\">\n\t\t\t\t\t<span className=\"input__label-content input__label-content--isao\">Search task by text...</span>\n\t\t\t\t</label>\n\t\t\t</span>\n\t\t</div>\n\t\t)\n};\n\n\nexport default SearchBar\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ToDoInput from '../components/todo-input/input/ToDoInput';\r\nimport Button from '../components/todo-input/button/Button';\r\nimport Searchbar from '../components/search/SearchBar';\r\nimport {addTask, addTaskData, addTaskSub, deleteTask,\r\n    searchTask, completeTask, changeFilter} from \"../actions/actionCreator\";\r\nimport Loadable from 'react-loadable';\r\nimport Loading from '../components/loader/Loading';\r\n\r\nimport './Todo.css';\r\n\r\nconst LoadableFooter = Loadable({\r\n    loader: () => import(/* webpackChunkName: \"footer\" */'../components/footer/Footer'),\r\n    loading: Loading,\r\n    timeout: 10000,\r\n    delay: 500\r\n});\r\n\r\nconst LoadableToDoList = Loadable({\r\n    loader: () => import(/* webpackChunkName: \"todolist\" */'../components/todo-list/ToDoList'),\r\n    loading: Loading,\r\n    timeout: 10000,\r\n    delay: 500\r\n});\r\n\r\nexport interface ToDoProps {\r\n    addTask: typeof addTask;\r\n    addTaskData: typeof addTaskData;\r\n    addTaskSub: typeof addTaskSub;\r\n    deleteTask: typeof deleteTask;\r\n    searchTask: typeof searchTask;\r\n    completeTask: typeof completeTask;\r\n    changeFilter: typeof changeFilter;\r\n    tasks: any;\r\n    filters: any;\r\n    isCompleted: boolean;\r\n}\r\n\r\nexport interface ToDoState {\r\n    taskText: string;\r\n    taskData: string;\r\n    searchText: string;\r\n    isExpansion: boolean;\r\n}\r\n\r\nclass ToDo extends React.Component<ToDoProps,ToDoState> {\r\n\r\n    state = {\r\n        taskText: '',\r\n        taskData: '',\r\n        searchText: '',\r\n        isExpansion: false\r\n    };\r\n\r\n    handleInputChange = ({ target: { value } }) => {\r\n        this.setState({\r\n            taskText: value,\r\n        })\r\n    };\r\n\r\n    handleInputDataChange = ({ target: { value } }) => {\r\n        this.setState({\r\n            taskData: value,\r\n        })\r\n    };\r\n\r\n    handleCheckBoxChange = () => {\r\n        this.setState({\r\n            isExpansion: !this.state.isExpansion,\r\n        });\r\n    };\r\n\r\n    addTask = (e) => {\r\n        e.preventDefault();\r\n        const { taskText } = this.state;\r\n\r\n        if (taskText.length > 3) {\r\n            const { addTask } = this.props;\r\n\r\n            addTask((new Date()).getTime(), taskText, false, 'simpletask');\r\n\r\n            this.setState({\r\n                taskText: ''\r\n            })\r\n        }\r\n    };\r\n\r\n    addTaskData = (e) => {\r\n        e.preventDefault();\r\n        const { taskText, taskData } = this.state;\r\n\r\n        if (taskText.length > 3) {\r\n            const { addTaskData } = this.props;\r\n\r\n            addTaskData((new Date()).getTime(), taskText, taskData, false, 'datatask');\r\n\r\n            this.setState({\r\n                taskText: '',\r\n                taskData: ''\r\n            })\r\n        }\r\n    };\r\n\r\n    addTaskSub = (e) => {\r\n        e.preventDefault();\r\n        const { taskText, isExpansion } = this.state;\r\n\r\n        if (taskText.length > 3) {\r\n            const { addTaskSub } = this.props;\r\n\r\n            addTaskSub((new Date()).getTime(), taskText, false, true, 'subtask');\r\n\r\n            this.setState({\r\n                taskText: '',\r\n                isExpansion: false\r\n            })\r\n        }\r\n    };\r\n\r\n    getActiveTasksCounter = tasks => tasks.filter(task => !task.isCompleted).length;\r\n\r\n    filterTasks = (tasks, activeFilter) => {\r\n        switch (activeFilter) {\r\n            case 'completed':\r\n                return tasks.filter(task => task.isCompleted);\r\n            case 'active':\r\n                return tasks.filter(task => !task.isCompleted);\r\n            default:\r\n                return tasks;\r\n        }\r\n    };\r\n\r\n    updateData(config) {\r\n        this.setState(config);\r\n    };\r\n\r\n\r\n    render() {\r\n        const { taskText, taskData, searchText, isExpansion } = this.state;\r\n        const { tasks, deleteTask, completeTask, filters, changeFilter, searchTask, isCompleted } = this.props;\r\n        const isTasksExist = tasks && tasks.length > 0;\r\n        const filteredTasks = this.filterTasks(tasks, filters);\r\n        const taskCounter = this.getActiveTasksCounter(tasks);\r\n\r\n        return (\r\n            <div className=\"todo-wrapper\">\r\n                <Searchbar update={this.updateData.bind(this)} searchTask={searchTask} type=\"text\" searchText={searchText}   />\r\n\r\n                <div className=\"todo-form\">\r\n\r\n                    <ToDoInput onChange={this.handleInputChange} value={taskText} type=\"text\"\r\n                               className='input__field input__field--isao' />\r\n                    <ToDoInput onChange={this.handleInputDataChange} value={taskData} type=\"date\"\r\n                               className='input__field input__field--isao' />\r\n                    <h2 className=\"h2_checkbox\">Expand the task for subtasks?</h2>\r\n                    <input id=\"checkbox\" type=\"checkbox\" className=\"input input-checkbox\"\r\n                           checked={isExpansion} onChange={this.handleCheckBoxChange} />\r\n                    <Button disabled={false} className=\"button button--pipaluk button--text-thick\"\r\n                            onClick={this.addTask}>Add Simple task</Button>\r\n                    <Button disabled={false} className=\"button button--pipaluk button--text-thick\"\r\n                            onClick={this.addTaskData}>Add task with data</Button>\r\n                    <Button disabled={false} className=\"button button--pipaluk button--text-thick\"\r\n                            onClick={this.addTaskSub}>Add Expansion Task</Button>\r\n\r\n                </div>\r\n                {isTasksExist && <LoadableFooter changeFilter={changeFilter} amount={taskCounter} activeFilter={filters} />}\r\n                {isTasksExist && <LoadableToDoList completeTask={completeTask} tasksList={filteredTasks} deleteTask={deleteTask} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(({tasks, filters}) => ({\r\n    tasks,\r\n    filters,\r\n}), { addTask, addTaskData, addTaskSub, searchTask,\r\n    deleteTask, completeTask, changeFilter})(ToDo);\r\n","import React from 'react';\n\nimport './Title.css';\n\ninterface TitleProps {\n    title: string;\n}\n\nconst Title = ({title}: TitleProps) => (\n\t<h1 className=\"link link--kukuri\">{title}</h1>\n);\n\nexport default Title;\n","import React,{Fragment} from 'react';\nimport ToDo from './containers/Todo';\nimport Title from './components/title/Title';\n\nconst App = () => (\n\t<Fragment>\n\t\t<Title title=\"ToDo Application\" />\n\t\t<ToDo />\n\t</Fragment>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {ADD_TASK, COMPLETE_TASK, DELETE_TASK, ADD_TASK_WITH_DATA, SEARCH_TASK, ADD_TASK_SUB} from '../constants';\nimport {load} from 'redux-localstorage-simple';\n\nlet TASKS = load({ namespace: 'todo-list' });\n\n\n// @ts-ignore\nif (!TASKS || !TASKS.tasks || !TASKS.tasks.length) {\n\tTASKS = {\n\t\ttasks: [],\n\t}\n}\n\n\n// @ts-ignore\nconst tasks = (state = TASKS.tasks, { id, text, data, isCompleted, valueSearch, isExpansion, typeTask, type }) => {\n\tswitch (type) {\n\t\tcase ADD_TASK :\n\t\t\treturn [\n\t\t\t\t...state, {\n\t\t\t\t\tid,\n\t\t\t\t\ttext,\n\t\t\t\t\tisCompleted,\n                    typeTask\n\t\t\t\t}\n\t\t\t];\n        case ADD_TASK_WITH_DATA:\n            return [\n                ...state, {\n                    id,\n                    text,\n                    data,\n                    isCompleted,\n                    typeTask\n                }\n            ];\n        case ADD_TASK_SUB:\n            return [\n                ...state, {\n                    id,\n                    text,\n                    isCompleted,\n                    isExpansion,\n                    typeTask\n                }\n            ];\n\t\tcase DELETE_TASK :\n\t\t\treturn [...state].filter(task => task.id !== id);\n        case SEARCH_TASK:\n            return [...state].filter(task =>\n                 task.text.toLowerCase().includes(valueSearch));\n\t\tcase COMPLETE_TASK :\n\t\t\treturn [...state].map(task => {\n\t\t\t\tif( task.id === id){\n\t\t\t\t\ttask.isCompleted = !task.isCompleted;\n\t\t\t\t}\n\t\t\t\treturn task;\n\t\t\t});\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default tasks;\n","import { CHANGE_FILTER } from '../constants';\n\nconst BASE_FILTER = 'all';\n\nconst filter = (state = BASE_FILTER, { type, activeFilter }) => {\n\tswitch (type) {\n\t\tcase CHANGE_FILTER:\n\t\t\treturn activeFilter;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default filter;\n","import {ADD_TASK_IN_SUBTASK, DELETE_SUBTASK, COMPLETE_SUBTASK} from '../constants';\n// @ts-ignore\nimport {load} from 'redux-localstorage-simple';\n\nlet TASKSUB = load({ namespace: 'todo-list-sub' });\n\n// @ts-ignore\nif (!TASKSUB || !TASKSUB.tasksub || !TASKSUB.tasksub.length) {\n    TASKSUB = {\n        tasksub: [],\n    }\n}\n\n// @ts-ignore\nconst tasksub = (state = TASKSUB.tasksub, {id, text, isCompleted, typeTask, type}) => {\n    switch (type) {\n        case ADD_TASK_IN_SUBTASK:\n            return [\n                ...state, {\n                    id,\n                    text,\n                    isCompleted,\n                    typeTask\n                }\n            ];\n        case DELETE_SUBTASK:\n            return [...state].filter(task => task.id !== id);\n        case COMPLETE_SUBTASK:\n            return [...state].map(task => {\n                if( task.id === id){\n                    task.isCompleted = !task.isCompleted;\n                }\n                return task;\n            });\n        default:\n            return state;\n    }\n};\n\nexport default tasksub\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport rootReducer from './reducers/index';\r\nimport {save} from 'redux-localstorage-simple';\r\n\r\n/* eslint-disable no-underscore-dangle */\r\nconst composeEnhancers =\r\n\tprocess.env.NODE_ENV !== 'production' &&\r\n\ttypeof window === 'object' &&\r\n\twindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\r\n/* eslint-enable */\r\n\r\nconst configureStore = preloadedState => (\r\n\tcreateStore(\r\n\t\trootReducer,\r\n\t\tpreloadedState,\r\n\t\tcomposeEnhancers(\r\n\t\t\tapplyMiddleware(save({ namespace: 'todo-list'}))\r\n\t\t),\r\n\t)\r\n);\r\n\r\nconst store = configureStore({});\r\n\r\nexport default store;\r\n","// @ts-ignore\nimport { combineReducers } from 'redux';\nimport tasks from './tasks';\nimport filters from './filters';\nimport tasksub from './tasksub';\n\nconst rootReducer = combineReducers({tasks, filters, tasksub});\n\nexport default rootReducer;\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n// @ts-ignore\nimport {Provider} from 'react-redux';\nimport store from './store';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root') as HTMLElement\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}