{"version":3,"sources":["components/todo-item/ToDoItem.tsx","components/todo-item/timer/timer-components/Button_Date.tsx","components/todo-item/timer/timer-components/TimerDisplay.tsx","components/todo-item/timer/ToDoItemDate.tsx","components/todo-item/sub/ToDoSub.tsx","components/todo-list/ToDoList.tsx"],"names":["ToDoItem","_this$props","this","props","completeTask","isCompleted","deleteTask","id","text","typeTask","react__WEBPACK_IMPORTED_MODULE_5__","className","onClick","React","Button_Date","startTimer","time","react","handleButtonDate","bind","TimerDisplay","timeLeft","ToDoItemDate","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","assertThisInitialized","state","timer","isCompletedDate","_this2","clearInterval","setInterval","setState","data","_this$state","data_sec","Date","parse","timer_timer_components_Button_Date","timer_timer_components_TimerDisplay","LoadableToDoListSub","Loadable","loader","__webpack_require__","e","then","loading","Loading","timeout","delay","ToDoSub","subtaskText","handleInputChange","_ref","value","target","addTaskInSubTask","preventDefault","length","getTime","filterSubTasks","tasksub","activeFilter","filter","task","isExpansion","deleteSubTask","completeSubTask","filters","isTasksSubExist","filteredSubTasks","ToDoInput","onChange","type","Button","disabled","tasksSubList","connect","_ref2","changeFilter","ToDoList","tasksList","map","todo_item_sub_ToDoSub","key","todo_item_timer_ToDoItemDate"],"mappings":"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","file":"static/js/todolist.5041dfc7.chunk.js","sourcesContent":["import * as React from 'react';\nimport {completeTask, deleteTask} from '../../actions/actionCreator';\n\nimport './ToDoItem.css';\n\nexport interface ToDoItemProps {\n    id: string;\n    text: string;\n    isCompleted: boolean;\n    completeTask: typeof completeTask;\n    deleteTask: typeof deleteTask;\n    typeTask: string;\n}\n\nclass ToDoItem extends React.Component<ToDoItemProps,{}>{\n\n\trender(){\n\t\tconst {completeTask, isCompleted, deleteTask, id, text, typeTask} = this.props;\n\t\treturn(\n\t\t\t<div className=\"todo-item\">\n\t\t\t\t \t\t<li  className='todo-item'>\n\t\t\t\t \t\t\t<i onClick={ () => completeTask(id) }\n\t\t\t\t\t\t\t   className={isCompleted ? 'mark far fa-check-circle' : 'mark far fa-circle'} />\n\t\t\t\t \t\t\t<span className={isCompleted ? 'completed text' : 'text'}>{text}</span>\n\t\t\t\t \t\t\t<i onClick={ () => deleteTask(id) } className=\"fas fa-times\" />\n\t\t\t\t \t\t</li>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ToDoItem;\n","import * as React from 'react';\nimport './Button_Date.css'\n\nexport interface Button_Date_Props {\n    time: number;\n    startTimer: (e: number) => void;\n}\n\nclass Button_Date extends React.Component<Button_Date_Props, {}>{\n\n\thandleButtonDate(){\n\t\treturn this.props.startTimer(this.props.time)\n\t}\n\n\trender(){\n\t\treturn <button className=\"button button--pipaluki button--text-thicki\"\n                       onClick={this.handleButtonDate.bind(this)}>Start Task</button>\n\t}\n}\n\nexport default Button_Date;\n","import * as React from 'react';\nimport './TimerDisplay.css';\n\nexport interface TimerDisplayProps{\n    timeLeft: number;\n}\n\nclass TimerDisplay extends React.Component<TimerDisplayProps,{}> {\n\trender() {\n\t\treturn <h1 className=\"display\">left <br/>  <span>{this.props.timeLeft} </span> <br/> seconds</h1>\n\t}\n}\n\nexport default TimerDisplay;\n","import * as React from 'react';\nimport Button_Date from './timer-components/Button_Date';\nimport TimerDisplay from './timer-components/TimerDisplay';\nimport {completeTask, deleteTask} from '../../../actions/actionCreator';\n\n\nimport './ToDoItemDate.css';\n\nexport interface ToDoItemDateProps {\n    completeTask: typeof completeTask;\n    deleteTask: typeof deleteTask;\n    id: string;\n    text: string;\n    data: string;\n    isCompleted: boolean;\n    typeTask: string;\n}\n\nexport interface ToDoItemDateState {\n    timer: any;\n    timeLeft: any;\n    isCompletedDate: boolean;\n}\n\nclass ToDoItemDate extends React.Component<ToDoItemDateProps, ToDoItemDateState>{\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.startTimer = this.startTimer.bind(this);\n\t\tthis.state = {\n\t\t\ttimeLeft: null,\n\t\t\ttimer: null,\n\t\t\tisCompletedDate: false\n\t\t};\n\t}\n\n\tstartTimer(timeLeft) {\n\t\tclearInterval(this.state.timer);\n\t\tlet timer = setInterval(() => {\n\t\t\tlet timeLeft = this.state.timeLeft - 1;\n\t\t\tif (timeLeft === 0) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisCompletedDate: true\n\t\t\t\t});\n\t\t\t\tclearInterval(timer);\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\ttimeLeft: timeLeft\n\t\t\t});\n\t\t}, 1000);\n\t\treturn this.setState({timeLeft: timeLeft, timer: timer});\n\t}\n\n\n\trender(){\n\t\tconst {completeTask, deleteTask, id, text, data, isCompleted, typeTask} = this.props;\n\t\tconst {timeLeft, isCompletedDate} = this.state;\n\t\t let data_sec = Date.parse(data) / 100000;\n\n\t\treturn(\n\t\t\t<div className=\"todo-item-div\">\n\t\t\t\t<li  className='todo-item-date'>\n\t\t\t\t\t<i onClick={ () => completeTask(id) }\n\t\t\t\t\t   className={isCompleted ? 'mark far fa-check-circle' : 'mark far fa-circle'} />\n\t\t\t\t\t<span className={isCompletedDate ? 'completed text' : 'text'}>{text}</span>\n\t\t\t\t\t<Button_Date time={data_sec} startTimer={this.startTimer} />\n\t\t\t\t\t<TimerDisplay timeLeft = {timeLeft}/>\n\t\t\t\t\t<i onClick={ () => deleteTask(id) } className=\"fas fa-times\" />\n\t\t\t\t</li>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ToDoItemDate;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\n\nimport ToDoInput from '../../todo-input/input/ToDoInput';\nimport Button from '../../todo-input/button/Button';\nimport {addTaskInSubTask, deleteSubTask, completeSubTask,\n    changeFilter, completeTask, deleteTask} from '../../../actions/actionCreator';\nimport filters from '../../../reducers/filters';\nimport Loadable from 'react-loadable';\nimport Loading from '../../loader/Loading';\nimport './ToDoSub.css';\n\nconst LoadableToDoListSub = Loadable({\n    loader: () => import(/* webpackChunkName: \"todolistsub\" */'../../todo-item/sub/ToDoListSub'),\n    loading: Loading,\n    timeout: 10000,\n    delay: 500\n});\n\nexport interface ToDoSubProps {\n    id: string;\n    text: string;\n    completeTask: typeof completeTask;\n    deleteTask: typeof deleteTask;\n    isCompleted: boolean;\n    isExpansion: boolean;\n    filters: typeof filters;\n    tasksub: [];\n    deleteSubTask: typeof deleteSubTask;\n    completeSubTask: typeof completeSubTask;\n    addTaskInSubTask:typeof addTaskInSubTask;\n    typeTask: string;\n}\n\nexport interface ToDoSubState {\n    subtaskText: string;\n\n}\n\nclass ToDoSub extends React.Component<ToDoSubProps, ToDoSubState>{\n\n\tstate = {\n\t\tsubtaskText: ''\n\t};\n\n\n    handleInputChange = ({ target: { value } })  => {\n\t\tthis.setState({\n\t\t\tsubtaskText: value,\n\t\t})\n\t};\n\n\taddTaskInSubTask = e => {\n\t\te.preventDefault();\n\t\tconst {subtaskText} = this.state;\n\n\t\tif (subtaskText.length > 3) {\n\t\t\tconst {addTaskInSubTask} = this.props;\n\n\t\t\taddTaskInSubTask((new Date()).getTime(), subtaskText, false, 'simpletask');\n\n\t\t\tthis.setState({\n\t\t\t\tsubtaskText: ''\n\t\t\t})\n\t\t}\n\t};\n\n\tfilterSubTasks = (tasksub, activeFilter) => {\n\t\tswitch (activeFilter) {\n\t\t\tcase 'completed':\n\t\t\t\treturn tasksub.filter(task => task.isCompleted);\n\t\t\tcase 'active':\n\t\t\t\treturn tasksub.filter(task => !task.isCompleted);\n\t\t\tdefault:\n\t\t\t\treturn tasksub;\n\t\t}\n\t};\n\n\trender(){\n\t\tconst {subtaskText} = this.state;\n\t\tconst {completeTask, text, id, deleteTask, isCompleted, isExpansion,\n\t\t\ttasksub, deleteSubTask, completeSubTask, filters, typeTask } = this.props;\n\t\tconst isTasksSubExist = tasksub && tasksub.length > 0;\n\t\tconst filteredSubTasks = this.filterSubTasks(tasksub , filters);\n\n        return(\n\t\t\t<div className=\"todo-item-sub\">\n\t\t\t\t<li className=\"todo-item-sub\">\n\t\t\t\t\t<i onClick={ () => completeTask(id) }\n\t\t\t\t\t   className={isCompleted ? 'mark far fa-check-circle' : 'mark far fa-circle'} />\n\t\t\t\t\t<span className={isCompleted ? 'completed text' : 'text'}>{text}</span>\n\t\t\t\t\t<div className=\"sub-todo\">\n\t\t\t\t\t\t<div className=\"sub-todo-form\">\n\t\t\t\t\t\t\t<ToDoInput onChange={this.handleInputChange} value={subtaskText} type=\"text\"\n\t\t\t\t\t\t\t\t\t   className=\"input__field__subtask\" />\n\t\t\t\t\t\t\t<Button disabled={false} onClick={this.addTaskInSubTask} className=\"button-subtask\">Add task</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{isTasksSubExist && <LoadableToDoListSub completeSubTask={completeSubTask} tasksSubList={filteredSubTasks} deleteSubTask={deleteSubTask} />}\n\t\t\t\t\t</div>\n\t\t\t\t\t<i onClick={ () => deleteTask(id) } className=\"fas fa-times\" />\n\t\t\t\t</li>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default connect(({tasksub , filters}) => ({\n\ttasksub,\n\tfilters\n}), { addTaskInSubTask, deleteSubTask, completeSubTask, changeFilter })(ToDoSub);\n","import * as React from 'react';\r\nimport ToDoItem from '../todo-item/ToDoItem';\r\nimport ToDoItemDate from '../todo-item/timer/ToDoItemDate';\r\nimport ToDoSub from '../todo-item/sub/ToDoSub';\r\n\r\nimport {deleteTask, completeTask} from '../../actions/actionCreator';\r\nimport './ToDoList.css';\r\n\r\nexport interface TasksListProps {\r\n    id: string;\r\n    text: string;\r\n    data: string;\r\n    isCompleted: boolean;\r\n    isExpansion: boolean;\r\n    typeTask: string;\r\n}\r\n\r\nexport interface ToDoListProps {\r\n    tasksList: TasksListProps[];\r\n    deleteTask: typeof deleteTask;\r\n    completeTask: typeof completeTask;\r\n}\r\n\r\nconst ToDoList = ({tasksList, deleteTask, completeTask} : ToDoListProps) => {\r\n\r\n    return(\r\n        <ul className=\"todo-list\">\r\n            {tasksList.map(({id, text, data, isCompleted, isExpansion, typeTask}) => {\r\n                switch (typeTask) {\r\n                    case \"subtask\":\r\n                        return(<ToDoSub completeTask={completeTask} deleteTask={deleteTask} id={id} key={id} text={text}\r\n                                        isCompleted={isCompleted} isExpansion={isExpansion} typeTask={typeTask}/>);\r\n                    case \"datatask\":\r\n                        return(<ToDoItemDate completeTask={completeTask} deleteTask={deleteTask} id={id} key={id} text={text} data={data}\r\n                        \t\t\tisCompleted={isCompleted} typeTask={typeTask} />);\r\n                    case \"simpletask\":\r\n                        return(<ToDoItem completeTask={completeTask} deleteTask={deleteTask} id={id} key={id} text={text}\r\n                        \t\t\tisCompleted={isCompleted} typeTask={typeTask} />);\r\n                }\r\n            })}\r\n        </ul>\r\n        )\r\n\r\n};\r\n\r\nexport default ToDoList;\r\n\r\n"],"sourceRoot":""}